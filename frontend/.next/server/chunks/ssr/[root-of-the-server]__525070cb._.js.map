{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_a71539c9.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_a71539c9-module__T19VSG__className\",\n  \"variable\": \"geist_a71539c9-module__T19VSG__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 11, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_a71539c9.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist%22,%22arguments%22:[{%22variable%22:%22--font-geist-sans%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistSans%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist', 'Geist Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,gKAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,gKAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,gKAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_8d43a2aa.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_mono_8d43a2aa-module__8Li5zG__className\",\n  \"variable\": \"geist_mono_8d43a2aa-module__8Li5zG__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_8d43a2aa.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist_Mono%22,%22arguments%22:[{%22variable%22:%22--font-geist-mono%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistMono%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist Mono', 'Geist Mono Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,qKAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,qKAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,qKAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/SWATHIN/Desktop/Twilio%20Project/frontend/src/lib/getUser.ts"],"sourcesContent":["import { IUser } from \"@/type/user\";\r\n\r\nexport async function getCurrentUser():Promise<IUser | null> {\r\n  try {\r\n    const res = await fetch(`${process.env.NEXT_PUBLIC_API_BASE_URL}/user`, {\r\n      method: \"GET\",\r\n      credentials: \"include\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    if (!res.ok) return null;\r\n\r\n    const data = await res.json();\r\n    return data.user;\r\n  } catch (error) {\r\n    console.error(\"Error fetching user:\", error);\r\n    return null;\r\n  }\r\n}"],"names":[],"mappings":";;;;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,MAAM,MAAM,MAAM,6DAAwC,KAAK,CAAC,EAAE;YACtE,QAAQ;YACR,aAAa;YACb,SAAS;gBACP,gBAAgB;YAClB;QACF;QAEA,IAAI,CAAC,IAAI,EAAE,EAAE,OAAO;QAEpB,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,OAAO,KAAK,IAAI;IAClB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/SWATHIN/Desktop/Twilio%20Project/frontend/src/context/AuthContext.ts"],"sourcesContent":["import { createContext, useContext, useState, ReactNode, useEffect } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport { IUser } from \"@/type/user\";\r\nimport { getCurrentUser } from \"@/lib/getUser\";\r\n\r\n// Define the shape of the context\r\ninterface AuthContextType {\r\n    user: IUser | null;\r\n    loading: boolean;\r\n    setUser: React.Dispatch<React.SetStateAction<IUser | null>>;\r\n}\r\n\r\n// Create the context with default empty values\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\ninterface AuthProviderProps {\r\n    children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider = ({ children }: AuthProviderProps) => {\r\n    const [user, setUser] = useState<IUser | null>(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const router = useRouter();\r\n\r\n    useEffect(() => {\r\n        const fetchUser = async () => {\r\n            try {\r\n                setLoading(true);\r\n                const data = await getCurrentUser();\r\n                if (!data) {\r\n                    router.push('/');\r\n                }\r\n                setUser(data);\r\n            } catch (error) {\r\n                console.error(\"Error in AuthProvider:\", error);\r\n                setUser(null);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchUser();\r\n    }, []);\r\n\r\n    return AuthContext.Provider({\r\n        value: { user, loading, setUser },\r\n        children: children\r\n    });\r\n};\r\n\r\n\r\nexport const useAuth = () => {\r\n    const context = useContext(AuthContext);\r\n    if (context === undefined) {\r\n        throw new Error(\"useAuth must be used within an AuthProvider\");\r\n    }\r\n    return context;\r\n};"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;AASA,+CAA+C;AAC/C,MAAM,4BAAc,IAAA,sNAAa,EAA8B;AAMxD,MAAM,eAAe,CAAC,EAAE,QAAQ,EAAqB;IACxD,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,iNAAQ,EAAe;IAC/C,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iNAAQ,EAAC;IACvC,MAAM,SAAS,IAAA,2IAAS;IAExB,IAAA,kNAAS,EAAC;QACN,MAAM,YAAY;YACd,IAAI;gBACA,WAAW;gBACX,MAAM,OAAO,MAAM,IAAA,uIAAc;gBACjC,IAAI,CAAC,MAAM;oBACP,OAAO,IAAI,CAAC;gBAChB;gBACA,QAAQ;YACZ,EAAE,OAAO,OAAO;gBACZ,QAAQ,KAAK,CAAC,0BAA0B;gBACxC,QAAQ;YACZ,SAAU;gBACN,WAAW;YACf;QACJ;QAEA;IACJ,GAAG,EAAE;IAEL,OAAO,YAAY,QAAQ,CAAC;QACxB,OAAO;YAAE;YAAM;YAAS;QAAQ;QAChC,UAAU;IACd;AACJ;AAGO,MAAM,UAAU;IACnB,MAAM,UAAU,IAAA,mNAAU,EAAC;IAC3B,IAAI,YAAY,WAAW;QACvB,MAAM,IAAI,MAAM;IACpB;IACA,OAAO;AACX","debugId":null}},
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/SWATHIN/Desktop/Twilio%20Project/frontend/src/app/layout.tsx"],"sourcesContent":["import type { Metadata } from \"next\";\nimport { Geist, Geist_Mono } from \"next/font/google\";\nimport \"./globals.css\";\nimport { getCurrentUser } from \"@/lib/getUser\";\nimport React from \"react\";\nimport { AuthProvider } from \"@/context/AuthContext\";\n\nconst geistSans = Geist({\n  variable: \"--font-geist-sans\",\n  subsets: [\"latin\"],\n});\n\nconst geistMono = Geist_Mono({\n  variable: \"--font-geist-mono\",\n  subsets: [\"latin\"],\n});\n\nexport const metadata: Metadata = {\n  title: \"Event Reminder\",\n  description: \"Never miss an important event again. Get automated phone call reminders for your Google Calendar events.\",\n};\n\nexport default async function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\">\n      <body\n        className={`${geistSans.variable} ${geistMono.variable} antialiased`}\n      >\n        <AuthProvider>{children}</AuthProvider>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;AAKA;;;;;;AAYO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAEe,eAAe,WAAW,EACvC,QAAQ,EAGR;IACA,qBACE,8OAAC;QAAK,MAAK;kBACT,cAAA,8OAAC;YACC,WAAW,GAAG,oJAAS,CAAC,QAAQ,CAAC,CAAC,EAAE,yJAAS,CAAC,QAAQ,CAAC,YAAY,CAAC;sBAEpE,cAAA,8OAAC,6IAAY;0BAAE;;;;;;;;;;;;;;;;AAIvB","debugId":null}}]
}